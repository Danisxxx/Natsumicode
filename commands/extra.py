from pyrogram import Client, filters
import re
import requests
from random import randint

def setup(app):
    @app.on_message(filters.command("extra", prefixes="/") & filters.me)
    async def extra_handler(client, message):
        # Extraer texto del mensaje o del mensaje respondido
        if message.reply_to_message:
            text = message.reply_to_message.text
        else:
            text = message.text

        # Buscar los primeros 6 dígitos del BIN
        bin_match = re.search(r'\b\d{6}\b', text)
        if not bin_match:
            await message.reply("No se encontró un BIN válido de 6 dígitos.")
            return

        bin_number = bin_match.group(0)

        # Realizar la solicitud a la API para obtener la información del BIN
        api_url = f"https://bins.antipublic.cc/api/{bin_number}"
        try:
            response = requests.get(api_url)
            bin_data = response.json()

            # Datos de la API
            bin_info = bin_data.get('scheme', '').upper()
            bank = bin_data.get('bank', '')
            country = bin_data.get('country', '')
            flag = bin_data.get('countryInfo', {}).get('emoji', '')

        except Exception as e:
            await message.reply(f"Error al obtener información del BIN: {e}")
            return

        # Buscar si hay una fecha de expiración en el texto y ajustarla
        date_match = re.search(r'\b(\d{2})[\/\|\:\-](\d{2})\b', text)
        if date_match:
            month = date_match.group(1)
            year = "20" + date_match.group(2)
        else:
            # Si no hay fecha, se generan fechas aleatorias
            month = f"{randint(1, 12):02d}"
            year = str(randint(2025, 2030))

        # Generar tarjetas aleatorias
        generated_cards = []
        for _ in range(10):
            card_number = f"{bin_number}{randint(1000000000, 9999999999):010d}xxxx"
            generated_cards.append(f"{card_number}|{month}|{year}|rnd")

        # Preparar el mensaje de respuesta
        response_message = (
            "あ Card Extrapolator\n\n"
            "↯ » Extras sacadas de la DB\n"
            f"↯ » Monto 10 ccs\n\n"
            + "\n".join(generated_cards) + "\n\n"
            f"↯ » Bin Info: {bin_info}\n"
            f"↯ » Banking entity: {bank}\n"
            f"↯ » Country: {country} [{flag}]\n\n"
            "あ Generated by: @Sunblack12"
        )

        # Enviar el mensaje de respuesta
        await message.reply(response_message)
